@using PagedList;
@using PagedList.Mvc;
@using GMKB;
@model IPagedList<GMKB.Models.Case>

@{
    ViewBag.Title = "Index";
}
<div class="col-md-12 title">

    <img src="~/Content/images/CSI.png" class="col-md-6 headimage" />
    <h2 class="col-md-6 title">Goldmine Knowledge Base</h2>
</div>
<p>
    <br /><br /><br />
    @using (Html.BeginForm("Index", "Cases", FormMethod.Get))
    {
        <div class="row">
            <div id="boxes">
                <span class="slamleft">
                    <label>Step 1:</label>&nbsp;@Html.DropDownList("caseProduct", "-- Select a Product --")
                    &nbsp;<label>Step 2: </label>&nbsp;@Html.DropDownList("caseType", "-- Select a Type --")
                    &nbsp;<label>Step 3: </label>&nbsp;@Html.DropDownList("caseCategory", "-- Select a Category --")
                </span>

                <span class="slamright">
                    <label>Keyword:</label> &nbsp;@Html.TextBox("SearchString")
                    <input type="submit" value="Search" />
                </span>
            </div>
        </div>


    }

</p>
<div class="results">
    <table class="table">
        <tr>

            <th>
               
                @Html.DisplayNameFor(model => model.First().CaseNumber)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.First().McMProduct)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CaseType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Category)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.First().Description)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.First().Resolution)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().McM_DateTime_Resolved)
            </th>
        </tr>
        @if (Model.Count==0)
        {
            <tr>
                <td>
                    No cases match searched keywords
                </td>
            </tr>
        }
      
        
        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @item.CaseNumber.Value
                    @*@Html.DisplayFor(modelItem => item.CaseNumber)*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.McMProduct)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CaseType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    <!--Html.DisplayFor(modelItem => item.Description)-->
                    @{
                        string searchterm = @ViewData["searchterm"].ToString();
                        string color = @ViewData["color"].ToString();
                        string description = item.Description.ToString();
                        <!--Call the helper method found in RegexHelper.cs-->
                        string displaystring = description.HighlightKeyWords(searchterm, color, false);
                        <div> @Html.Raw(displaystring) </div>
                    }
                </td>
                <td>
                    @{
                        string resolution = item.Resolution.ToString();
                        <!--Call the helper method found in RegexHelper.cs-->
                        displaystring = resolution.HighlightKeyWords(searchterm, color, false);
                        <div> @Html.Raw(displaystring) </div>
                    }
                </td>

                <th>
                    @Html.DisplayFor(modelItem => item.McM_DateTime_Resolved)
                </th>

            </tr>
        }
        
    </table>
    @Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    searchString = Request.QueryString["searchString"],
    caseProduct = Request.QueryString["caseProduct"],
    caseType = Request.QueryString["caseType"],
    caseCategory = Request.QueryString["caseCategory"]
}), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
</div>

<script>

</script>
